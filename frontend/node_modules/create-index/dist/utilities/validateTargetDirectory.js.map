{"version":3,"sources":["../../src/utilities/validateTargetDirectory.js"],"names":["targetDirectory","options","silent","stats","fs","statSync","Error","isDirectory","indexFilePath","path","resolve","outputFile","indexFile","readFileSync","match","CREATE_INDEX_PATTERN"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;eAEe,kBAACA,eAAD,EAAmC;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AAChD,QAAMC,MAAM,GAAGD,OAAO,CAACC,MAAvB;AACA,MAAIC,KAAJ;;AAEA,MAAI;AACFA,IAAAA,KAAK,GAAGC,YAAGC,QAAH,CAAYL,eAAZ,CAAR;AACD,GAFD,CAEE,MAAM;AACN,QAAIE,MAAJ,EAAY;AACV,aAAO,KAAP;AACD,KAFD,MAEO;AACL,YAAM,IAAII,KAAJ,CAAU,gBAAgBN,eAAhB,GAAkC,mBAA5C,CAAN;AACD;AACF;;AAED,MAAI,CAACG,KAAK,CAACI,WAAN,EAAL,EAA0B;AACxB,QAAIL,MAAJ,EAAY;AACV,aAAO,KAAP;AACD,KAFD,MAEO;AACL,YAAM,IAAII,KAAJ,CAAU,MAAMN,eAAN,GAAwB,uBAAlC,CAAN;AACD;AACF;;AAED,QAAMQ,aAAa,GAAGC,cAAKC,OAAL,CAAaV,eAAb,EAA8B,QAAQC,OAAO,CAACU,UAAR,IAAsB,UAA9B,CAA9B,CAAtB;;AAEA,MAAI;AACFP,gBAAGC,QAAH,CAAYG,aAAZ;AACD,GAFD,CAEE,MAAM;AACN,WAAO,IAAP;AACD;;AAED,QAAMI,SAAS,GAAGR,YAAGS,YAAH,CAAgBL,aAAhB,EAA+B,MAA/B,CAAlB;;AAEA,MAAI,CAACI,SAAS,CAACE,KAAV,CAAgBC,+BAAhB,CAAL,EAA4C;AAC1C,QAAIb,MAAJ,EAAY;AACV,aAAO,KAAP;AACD,KAFD,MAEO;AACL,YAAM,IAAII,KAAJ,CAAU,MAAME,aAAN,GAAsB,iBAAhC,CAAN;AACD;AACF;;AAED,SAAO,IAAP;AACD,C","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport {CREATE_INDEX_PATTERN} from './constants';\n\nexport default (targetDirectory, options = {}) => {\n  const silent = options.silent;\n  let stats;\n\n  try {\n    stats = fs.statSync(targetDirectory);\n  } catch {\n    if (silent) {\n      return false;\n    } else {\n      throw new Error('Directory \"' + targetDirectory + '\" does not exist.');\n    }\n  }\n\n  if (!stats.isDirectory()) {\n    if (silent) {\n      return false;\n    } else {\n      throw new Error('\"' + targetDirectory + '\" is not a directory.');\n    }\n  }\n\n  const indexFilePath = path.resolve(targetDirectory, './' + (options.outputFile || 'index.js'));\n\n  try {\n    fs.statSync(indexFilePath);\n  } catch {\n    return true;\n  }\n\n  const indexFile = fs.readFileSync(indexFilePath, 'utf8');\n\n  if (!indexFile.match(CREATE_INDEX_PATTERN)) {\n    if (silent) {\n      return false;\n    } else {\n      throw new Error('\"' + indexFilePath + '\" unsafe index.');\n    }\n  }\n\n  return true;\n};\n\n"],"file":"validateTargetDirectory.js"}