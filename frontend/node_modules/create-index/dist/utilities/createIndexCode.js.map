{"version":3,"sources":["../../src/utilities/createIndexCode.js"],"names":["safeVariableName","fileName","indexOfDot","indexOf","slice","buildExportBlock","files","importBlock","_","map","join","filePaths","options","code","configCode","banner","banners","isArray","forEach","config","size","JSON","stringify","length","sortedFilePaths","sort"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,gBAAgB,GAAIC,QAAD,IAAc;AACrC,QAAMC,UAAU,GAAGD,QAAQ,CAACE,OAAT,CAAiB,GAAjB,CAAnB;;AAEA,MAAID,UAAU,KAAK,CAAC,CAApB,EAAuB;AACrB,WAAOD,QAAP;AACD,GAFD,MAEO;AACL,WAAOA,QAAQ,CAACG,KAAT,CAAe,CAAf,EAAkBF,UAAlB,CAAP;AACD;AACF,CARD;;AAUA,MAAMG,gBAAgB,GAAIC,KAAD,IAAW;AAClC,MAAIC,WAAJ;AAEAA,EAAAA,WAAW,GAAGC,gBAAEC,GAAF,CAAMH,KAAN,EAAcL,QAAD,IAAc;AACvC,WAAO,yBAAyBD,gBAAgB,CAACC,QAAD,CAAzC,GAAsD,cAAtD,GAAuEA,QAAvE,GAAkF,KAAzF;AACD,GAFa,CAAd;AAIAM,EAAAA,WAAW,GAAGA,WAAW,CAACG,IAAZ,CAAiB,IAAjB,CAAd;AAEA,SAAOH,WAAP;AACD,CAVD;;eAYe,kBAACI,SAAD,EAA6B;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AAC1C,MAAIC,IAAJ;AACA,MAAIC,UAAJ;AAEAD,EAAAA,IAAI,GAAG,EAAP;AACAC,EAAAA,UAAU,GAAG,EAAb;;AAEA,MAAIF,OAAO,CAACG,MAAZ,EAAoB;AAClB,UAAMC,OAAO,GAAGR,gBAAES,OAAF,CAAUL,OAAO,CAACG,MAAlB,IAA4BH,OAAO,CAACG,MAApC,GAA6C,CAACH,OAAO,CAACG,MAAT,CAA7D;AAEAC,IAAAA,OAAO,CAACE,OAAR,CAAiBH,MAAD,IAAY;AAC1BF,MAAAA,IAAI,IAAIE,MAAM,GAAG,IAAjB;AACD,KAFD;AAIAF,IAAAA,IAAI,IAAI,IAAR;AACD;;AAED,MAAID,OAAO,CAACO,MAAR,IAAkBX,gBAAEY,IAAF,CAAOR,OAAO,CAACO,MAAf,IAAyB,CAA/C,EAAkD;AAChDL,IAAAA,UAAU,IAAI,MAAMO,IAAI,CAACC,SAAL,CAAeV,OAAO,CAACO,MAAvB,CAApB;AACD;;AAEDN,EAAAA,IAAI,IAAI,qBAAqBC,UAArB,GAAkC,MAA1C;;AAEA,MAAIH,SAAS,CAACY,MAAd,EAAsB;AACpB,UAAMC,eAAe,GAAGb,SAAS,CAACc,IAAV,EAAxB;AAEAZ,IAAAA,IAAI,IAAIR,gBAAgB,CAACmB,eAAD,CAAhB,GAAoC,MAA5C;AACD;;AAED,SAAOX,IAAP;AACD,C","sourcesContent":["import _ from 'lodash';\n\nconst safeVariableName = (fileName) => {\n  const indexOfDot = fileName.indexOf('.');\n\n  if (indexOfDot === -1) {\n    return fileName;\n  } else {\n    return fileName.slice(0, indexOfDot);\n  }\n};\n\nconst buildExportBlock = (files) => {\n  let importBlock;\n\n  importBlock = _.map(files, (fileName) => {\n    return 'export { default as ' + safeVariableName(fileName) + ' } from \\'./' + fileName + '\\';';\n  });\n\n  importBlock = importBlock.join('\\n');\n\n  return importBlock;\n};\n\nexport default (filePaths, options = {}) => {\n  let code;\n  let configCode;\n\n  code = '';\n  configCode = '';\n\n  if (options.banner) {\n    const banners = _.isArray(options.banner) ? options.banner : [options.banner];\n\n    banners.forEach((banner) => {\n      code += banner + '\\n';\n    });\n\n    code += '\\n';\n  }\n\n  if (options.config && _.size(options.config) > 0) {\n    configCode += ' ' + JSON.stringify(options.config);\n  }\n\n  code += '// @create-index' + configCode + '\\n\\n';\n\n  if (filePaths.length) {\n    const sortedFilePaths = filePaths.sort();\n\n    code += buildExportBlock(sortedFilePaths) + '\\n\\n';\n  }\n\n  return code;\n};\n"],"file":"createIndexCode.js"}