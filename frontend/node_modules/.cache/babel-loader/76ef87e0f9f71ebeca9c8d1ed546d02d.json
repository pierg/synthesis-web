{"ast":null,"code":"import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","map":{"version":3,"names":["stringify","parse","stringToBytes","str","unescape","encodeURIComponent","bytes","i","length","push","charCodeAt","DNS","URL","name","version","hashfunc","generateUUID","value","namespace","buf","offset","TypeError","Uint8Array","set","err"],"sources":["/home/dave/Documents/suede/projet/synthesis-web/frontend/node_modules/uuid/dist/esm-browser/v35.js"],"sourcesContent":["import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;EAC1BA,GAAG,GAAGC,QAAQ,CAACC,kBAAkB,CAACF,GAAD,CAAnB,CAAd,CAD0B,CACe;;EAEzC,IAAIG,KAAK,GAAG,EAAZ;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAAG,CAACK,MAAxB,EAAgC,EAAED,CAAlC,EAAqC;IACnCD,KAAK,CAACG,IAAN,CAAWN,GAAG,CAACO,UAAJ,CAAeH,CAAf,CAAX;EACD;;EAED,OAAOD,KAAP;AACD;;AAED,OAAO,IAAIK,GAAG,GAAG,sCAAV;AACP,OAAO,IAAIC,GAAG,GAAG,sCAAV;AACP,eAAe,UAAUC,IAAV,EAAgBC,OAAhB,EAAyBC,QAAzB,EAAmC;EAChD,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,SAA7B,EAAwCC,GAAxC,EAA6CC,MAA7C,EAAqD;IACnD,IAAI,OAAOH,KAAP,KAAiB,QAArB,EAA+B;MAC7BA,KAAK,GAAGf,aAAa,CAACe,KAAD,CAArB;IACD;;IAED,IAAI,OAAOC,SAAP,KAAqB,QAAzB,EAAmC;MACjCA,SAAS,GAAGjB,KAAK,CAACiB,SAAD,CAAjB;IACD;;IAED,IAAIA,SAAS,CAACV,MAAV,KAAqB,EAAzB,EAA6B;MAC3B,MAAMa,SAAS,CAAC,kEAAD,CAAf;IACD,CAXkD,CAWjD;IACF;IACA;;;IAGA,IAAIf,KAAK,GAAG,IAAIgB,UAAJ,CAAe,KAAKL,KAAK,CAACT,MAA1B,CAAZ;IACAF,KAAK,CAACiB,GAAN,CAAUL,SAAV;IACAZ,KAAK,CAACiB,GAAN,CAAUN,KAAV,EAAiBC,SAAS,CAACV,MAA3B;IACAF,KAAK,GAAGS,QAAQ,CAACT,KAAD,CAAhB;IACAA,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAL,GAAW,IAAX,GAAkBQ,OAA7B;IACAR,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAL,GAAW,IAAX,GAAkB,IAA7B;;IAEA,IAAIa,GAAJ,EAAS;MACPC,MAAM,GAAGA,MAAM,IAAI,CAAnB;;MAEA,KAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwB,EAAEA,CAA1B,EAA6B;QAC3BY,GAAG,CAACC,MAAM,GAAGb,CAAV,CAAH,GAAkBD,KAAK,CAACC,CAAD,CAAvB;MACD;;MAED,OAAOY,GAAP;IACD;;IAED,OAAOnB,SAAS,CAACM,KAAD,CAAhB;EACD,CAnC+C,CAmC9C;;;EAGF,IAAI;IACFU,YAAY,CAACH,IAAb,GAAoBA,IAApB,CADE,CACwB;EAC3B,CAFD,CAEE,OAAOW,GAAP,EAAY,CAAE,CAxCgC,CAwC/B;;;EAGjBR,YAAY,CAACL,GAAb,GAAmBA,GAAnB;EACAK,YAAY,CAACJ,GAAb,GAAmBA,GAAnB;EACA,OAAOI,YAAP;AACD"},"metadata":{},"sourceType":"module"}